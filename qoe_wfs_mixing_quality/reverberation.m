wavFiles = { ...
    'stimuli/wfs_reference.wav'; ...
    'stimuli/wfs_reverb_m2.wav'; ...
    'stimuli/wfs_reverb_m1.wav'; ...
    'stimuli/wfs_reverb_p1.wav'; ...
    'stimuli/wfs_positioning_m2.wav'; ...
    'stimuli/wfs_positioning_m1.wav'; ...
    'stimuli/wfs_positioning_p1.wav'; ...
    'stimuli/wfs_positioning_p2.wav'; ...
    'stimuli/wfs_compression_m2.wav'; ...
    'stimuli/wfs_compression_m1.wav'; ...
    'stimuli/wfs_compression_p1.wav'; ...
    'stimuli/wfs_equalizing_m2.wav'; ...
    'stimuli/wfs_equalizing_m1.wav'; ...
    'stimuli/wfs_equalizing_p1.wav'; ...
    'stimuli/wfs_vocals_compression_equalizing_reverb_m2.wav'; ...
    'stimuli/wfs_vocals_compression_equalizing_reverb_m1.wav'; ...
    'stimuli/wfs_vocals_compression_equalizing_reverb_p1.wav'; ...
    'stimuli/wfs_vocals_compression_equalizing_p1.wav'; ...
    'stimuli/stereo.wav'; ...
};

for ii=1:length(wavFiles)
    [sig, fs] = audioread(wavFiles{ii});
    % Extract adaptation signals from AFE
    dataObj = dataObject(sig, fs);
    managerObj = manager(dataObj);
    sOut = managerObj.addProcessor('adaptation');
    managerObj.processSignal;
    % Convolve with 20ms 1st order low pass
    Wn = (1000/20) / (fs/2);
    [b,a] = butter(1, Wn, 'low');
    for jj=1:length(sOut{1}.cfHz)
        Yl(:, jj) = filter(b, a, sOut{1}.Data(:, jj));
        Yr(:, jj) = filter(b, a, sOut{2}.Data(:, jj));
    end
    % Extract background stream
    Ylrev = zeros(size(Yl));
    Yrrev = Ylrev;
    Yrev = Ylrev;
    for jj=1:size(Yl,2)
        Ylrev(:, jj) = backgroundSignal(Yl(:, jj), fs);
        Yrrev(:, jj) = backgroundSignal(Yr(:, jj), fs);
        Yrev(:, jj) = sqrt(Ylrev(:, jj).^2 + Yrrev(:, jj).^2);
    end
    Lrev(ii) = mean(mean(Yrev(:, 3:19), 1));
end

